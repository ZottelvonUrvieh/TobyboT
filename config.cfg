# The config file for my bot
# CAREFULL! IF YOU WANT TO CONTRIBUTE TO THIS REPOSITORY PLEASE USE THE FOLLOWING COMMAND FOR GIT:
# 'git update-index --assume-unchanged config.cfg' -> It makes that you don't include your config with
# your bot token in a pullrequrest.

# Be aware that the file has to have the correct layout or it will throw an error (It doesn't care about
# placement of spaces but that is about it)

# Each parameter has to be in one line. So something like THIS WILL NOT WORK:
# owners = [ 213123123, 123123123,
#            123123, 234234, 2434123 ]

# You can add your own settings for usage in your modules.
# They will be accessable through bot.configs.youSettingProperty
# Just add a new line like:
# yourSettingProperty = propertyString
# You can also indicate that the Setting is an Array of Strings by using [] like:
# yourSettingPropertyArray = [ propertyString1, propertyString2, propertyString3, ...]
# And finally you can not use '=' in your properties as that how it is determent
# where the propertyName and propertyValue are split
# I mean... look at the other Settings here and you get how it works ^^

# This is the token of the application you created that the bot will log in through.
# Takes the last token listed in this file so if you want to play around with
# differnt user bot logins you can just swap the order.
# This one is just as an example as reference how it should look like - not a real one
token = RAh5EkQuOvI0lGDxVHAPJTz4.jd-eFw.Y0MDwaElbLWawZdcl6u3RN07Etj
token = your.to-ken.forYourBotLogIn

# Owner ids - for special powers (separate with ",")
# owners = [ 240905093929500674,240905093929500675,240905093929500676 ] - just as an example ~~first id is mine so don't take that ;)
owners =

# Prefix to which the bot will respond to
prefix = )

# Enable / disable different verbose debug logging messages
# Posible choises: showAll (show all debug messages),
# 'dependant' (show debugs dependant of the module and command settings),
# 'discord' (show Discord debug messages)
# 'core' (show bots core debug messages - can be pretty usefull sometimes)
# Set to [] to force not showing debug outputs
debugFlags = [dependant, core]

# Default permissions (all available ones are listed on the bottom of this file)
defaultPermissions = [ VIEW_CHANNEL, SEND_MESSAGES ]

# Time intervall in which the bot will execute periodic tasks
# For example imagine a module adding a reminder command in which you can say 'remind me in 6h with a message'
# The bot will check if the if the 6 hours are over every x milliseconds
# (I have not tested yet what will happen if you make the timeout ridiculously low!)
timeout = 1000

# Set the maximal amount of listeners to one event. If at some point ther is an warning in the console like:
# (node:21817) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. X messageReactionAdd listeners added. Use emitter.setMaxListeners() to increase limit
# That means that you should increase this. (It just means that a lot of people are trying to do stuff at the same time essencially in our case)
# Setting to 0 means infinite listeners are allowed.
maxListeners = 500

# Login-URL for the remote mongoDB I have hosted on mlab.com (they give you ad 500mb database for free - so pretty cool for testing :D)
mongoDBurl = mongodb://myDBUserName:myDBUserPassword@dsSomeNumbersHere.mlab.com:somePort/myDBName
# Alternative to ^ the URL for when I host the DB localy
mongoDBurl_local = mongodb://localhost:27017/tobebot

# All Discord permissions just for overview (state: Oct-2017):
# ADMINISTRATOR (implicitly has *all* permissions, and bypasses all channel overwrites)
# CREATE_INSTANT_INVITE (create invitations to the guild)
# KICK_MEMBERS
# BAN_MEMBERS
# MANAGE_CHANNELS (edit and reorder channels)
# MANAGE_GUILD (edit the guild information, region, etc.)
# ADD_REACTIONS (add new reactions to messages)
# VIEW_AUDIT_LOG
# VIEW_CHANNEL
# SEND_MESSAGES
# SEND_TTS_MESSAGES
# MANAGE_MESSAGES (delete messages and reactions)
# EMBED_LINKS (links posted will have a preview embedded)
# ATTACH_FILES
# READ_MESSAGE_HISTORY (view messages that were posted prior to opening Discord)
# MENTION_EVERYONE
# USE_EXTERNAL_EMOJIS (use emojis from different guilds)
# CONNECT (connect to a voice channel)
# SPEAK (speak in a voice channel)
# MUTE_MEMBERS (mute members across all voice channels)
# DEAFEN_MEMBERS (deafen members across all voice channels)
# MOVE_MEMBERS (move members between voice channels)
# USE_VAD (use voice activity detection)
# CHANGE_NICKNAME
# MANAGE_NICKNAMES (change other members' nicknames)
# MANAGE_ROLES
# MANAGE_WEBHOOKS
# MANAGE_EMOJIS
